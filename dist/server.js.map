{"version":3,"file":"server.js","sourceRoot":"","sources":["../src/server.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as Crawler from 'node-html-crawler';\r\nimport * as request from 'request';\r\nimport * as cheerio from 'cheerio';\r\nimport * as URL from 'url-parse';\r\nimport { Validator } from './validator';\r\nimport * as helmet from 'helmet';\r\n\r\nclass Server {\r\n    public server: express.Application;\r\n    constructor() {\r\n        this.server = express();\r\n        this.init();\r\n        this.routes();\r\n    }\r\n    public init(): void {\r\n        // secure headers with helmet defaults\r\n        this.server.use(helmet());\r\n        // mount public folder for assets\r\n        this.server.use(express.static('public'));\r\n        // set view engine and template directory\r\n        this.server.set('views', './views');\r\n        this.server.set('view engine', 'pug');\r\n        // configure top level body parser\r\n        this.server.use(bodyParser.urlencoded({ extended: false }));\r\n        \r\n    }\r\n    public routes(): void {\r\n\r\n        /**\r\n         * example route\r\n         */\r\n        this.server.get('/kitchensink', (req, res) => {\r\n            res.render('kitchensink');\r\n        });\r\n\r\n        this.server.get('/', (req, res) => {\r\n            res.render('landing')\r\n        });\r\n\r\n        this.server.post('/validate_1', (req, res) => {\r\n            let ltc = this.sanitizeString(req.body.linktocheck);\r\n            let stc = this.sanitizeString(req.body.sitetocheck);\r\n\r\n            let crawler = new Crawler({\r\n                protocol: 'https:', // default 'http:'\r\n                domain: 'gewichtheberschuhe.info', // default 'example.com'\r\n                limitForConnections: 15, // number of simultaneous connections, default 10\r\n                limitForRedirects: 5, // possible number of redirects, default 3\r\n                timeout: 500 // number of milliseconds between pending connection, default 100 \r\n            });\r\n            crawler.crawl();\r\n            crawler.on('data', data => { \r\n                // console.log(data.result.links);\r\n                data.result.links.forEach(el => {\r\n                    // console.log(el.href);\r\n                    if (el.href===ltc) {\r\n                        console.log(`Found link:LINK: ${ltc}ENTRY FOUND ON SITE: ${el.href}`)\r\n                    }\r\n                });\r\n\r\n            }); // some html-page a loaded\r\n            crawler.on('error', error => { }); // error in crawling\r\n            crawler.on('end', () => { }); // all pages found are crawled and loaded\r\n        });\r\n\r\n        this.server.post('/validate', (req, res) => {\r\n            let ltc = this.sanitizeString(req.body.linktocheck);\r\n            let stc = this.sanitizeString(req.body.sitetocheck);\r\n            let v = new Validator(ltc, stc);\r\n            v.requestUrl().then((crawlerResult:any) => {\r\n                res.render('landing', { \r\n                    pageTitle: crawlerResult.pageTitle,\r\n                    hasLink: crawlerResult.hasLink,\r\n                    links: crawlerResult.links\r\n                });\r\n            }, (err) => {\r\n                res.send(err);\r\n            });\r\n        });\r\n    }\r\n    public sanitizeString(str) {\r\n        str = str.replace(/[^a-z0-9.:/,_-]/gim,\"\");\r\n        return str.trim();\r\n    }\r\n}\r\nexport default new Server().server;"]}